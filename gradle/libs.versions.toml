[versions]
agp = "8.2.2"
annotations = "24.1.0"
autofittextview = "0.2.1"
circleimageview = "3.1.0"
converterScalars = "2.9.0"
coreKtx = "1.12.0"
dagger = "2.51"
explosionfield = "1.0.1"
fastjson2 = "2.0.27"
fragmentKtx = "1.6.2"
glide = "4.13.1"
glideTransformations = "4.3.0"
greendao = "3.3.0"
greendaoGradlePluginVersion = "3.3.1"
gson = "2.10.1"
input = "3.3.0"
jsoup = "1.17.2"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
appcompat = "1.6.1"
juniversalchardet = "1.0.3"
kotlinReflect = "1.9.22"
kotlinxCoroutinesCore = "1.7.1"
kyleduoLibrary = "2.1.0"
leakcanaryAndroid = "2.13"
legacySupportV4 = "1.0.0"
lib = "1.0.4"
library = "2.4"
libraryVersion = "2.4"
lifecycleExtensions = "2.2.0"
lifecycleRuntimeKtx = "2.7.0"
lifecycleViewmodelSavedstate = "2.7.0"
loggingInterceptor = "5.0.0-alpha.12"
material = "1.11.0"
activity = "1.8.2"
constraintlayout = "2.1.4"
kotlin="1.9.22"
multiimageselector = "1.2"
permissionx = "1.7.1"
plugin = "1.2.2"
recyclerview = "1.3.2"
rxandroid = "3.0.2"
rxbinding = "4.0.0"
rxbus = "3.0.0"
rxjava = "3.1.8"
rxkotlin = "3.0.0"
rxlifecycle = "3.1.0"
rxlifecycleKotlin = "4.0.2"
rxpermissions = "0.10.2"
scarlet = "0.1.12"
stetho = "1.6.0"
tinypinyin = "2.0.3"
utilcodex = "1.31.0"
[libraries]
activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
adapter-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "converterScalars" }
androidanimations-library = { module = "com.daimajia.androidanimations:library", version.ref = "libraryVersion" }
androidx-legacy-support-v4 = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupportV4" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-common-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
annotations = { module = "org.jetbrains:annotations", version.ref = "annotations" }
apt = { module = "cn.therouter:apt", version.ref = "plugin" }
autofittextview = { module = "me.grantland:autofittextview", version.ref = "autofittextview" }
bottomsheets = { module = "com.afollestad.material-dialogs:bottomsheets", version.ref = "input" }
circleimageview = { module = "de.hdodenhof:circleimageview", version.ref = "circleimageview" }
compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterScalars" }
converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "converterScalars" }
core = { module = "com.afollestad.material-dialogs:core", version.ref = "input" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
eventbus = { module = "org.greenrobot:eventbus", version.ref = "greendaoGradlePluginVersion" }
explosionfield = { module = "tyrantgit:explosionfield", version.ref = "explosionfield" }
fastjson2 = { module = "com.alibaba.fastjson2:fastjson2", version.ref = "fastjson2" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-transformations = { module = "jp.wasabeef:glide-transformations", version.ref = "glideTransformations" }
greendao = { module = "org.greenrobot:greendao", version.ref = "greendao" }
greendao-generator = { module = "org.greenrobot:greendao-generator", version.ref = "greendao" }
greendao-gradle-plugin = { module = "org.greenrobot:greendao-gradle-plugin", version.ref = "greendaoGradlePluginVersion" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
input = { module = "com.afollestad.material-dialogs:input", version.ref = "input" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
juniversalchardet = { module = "com.googlecode.juniversalchardet:juniversalchardet", version.ref = "juniversalchardet" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesCore" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanaryAndroid" }
lib = { module = "com.victor:lib", version.ref = "lib" }
library = { module = "com.daimajia.easing:library", version.ref = "library" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "lifecycleViewmodelSavedstate" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
multi-image-selector = { module = "com.github.lovetuzitong:MultiImageSelector", version.ref = "multiimageselector" }
permissionx = { module = "com.guolindev.permissionx:permissionx", version.ref = "permissionx" }
router = { module = "cn.therouter:router", version.ref = "plugin" }
rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxandroid" }
rxbinding = { module = "com.jakewharton.rxbinding4:rxbinding", version.ref = "rxbinding" }
rxbus = { module = "com.hwangjr.rxbus:rxbus", version.ref = "rxbus" }
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjava" }
rxkotlin = { module = "io.reactivex.rxjava3:rxkotlin", version.ref = "rxkotlin" }
rxlifecycle = { module = "com.trello.rxlifecycle3:rxlifecycle", version.ref = "rxlifecycle" }
rxlifecycle-android = { module = "com.trello.rxlifecycle3:rxlifecycle-android", version.ref = "rxlifecycle" }
rxlifecycle-android-lifecycle-kotlin = { module = "com.trello.rxlifecycle4:rxlifecycle-android-lifecycle-kotlin", version.ref = "rxlifecycleKotlin" }
rxlifecycle-components = { module = "com.trello.rxlifecycle4:rxlifecycle-components", version.ref = "rxlifecycleKotlin" }
rxlifecycle-kotlin = { module = "com.trello.rxlifecycle4:rxlifecycle-kotlin", version.ref = "rxlifecycleKotlin" }
rxlifecycle3-rxlifecycle-components = { module = "com.trello.rxlifecycle3:rxlifecycle-components", version.ref = "rxlifecycle" }
rxpermissions = { module = "com.github.tbruyelle:rxpermissions", version.ref = "rxpermissions" }
scarlet = { module = "com.tinder.scarlet:scarlet", version.ref = "scarlet" }
stetho = { module = "com.facebook.stetho:stetho", version.ref = "stetho" }
stetho-okhttp3 = { module = "com.facebook.stetho:stetho-okhttp3", version.ref = "stetho" }
switchbutton-library = { module = "com.kyleduo.switchbutton:library", version.ref = "kyleduoLibrary" }
tinypinyin = { module = "com.github.promeg:tinypinyin", version.ref = "tinypinyin" }
utilcodex = { module = "com.blankj:utilcodex", version.ref = "utilcodex" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid={id="org.jetbrains.kotlin.android",version.ref="kotlin"}
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
theRouter={id="cn.therouter.agp8",version.ref="plugin"}
